Mon 16 May 2011 07:44:09 PM PDT
  New project: Design and build a Arduino based LC Meter
    - use gEDA tools
    - use mercurial for the DRCS
    - use Hatta for the wiki
  
  Install Hatta:
    - INSTALL: mercurial python-werkzeug python-pygments
    - Downloaded hatta.py from the website (http://hatta-wiki.org). Put
      it in my ~/bin directory.

  Create initial repository in the /srv directory on raven.
  Clone a local copy:
    hg clone ssh://jerry@raven//srv/hg/lcMeter


Tue 17 May 2011 03:44:17 PM PDT
    - Start the wiki by running 'hatta.py'
    - Wiki will be at http://localhost:8080/
    - The hatta.conf file is set to constrain access to localhost.


Sun 26 Jun 2011 02:12:41 PM PDT
    TODO:
      - finish UI schematic - DONE
      - add power connections to schematics - DONE
      - footprints for:
         - LCD
         - Terminals
         - BNC
         - Switches


Sun 26 Jun 2011 05:13:12 PM PDT
    - DONE: Rework Uno connector symbols- confusing pin label/number positions
      when symbol is inverted/rotated

Sun 26 Jun 2011 09:59:22 PM PDT
    - DONE: Calculate pull-up resistors for level shifter per 2.3.5 of
      AN10418.

        10K will work for bus capacitance up to 200pF, even with 3.3v
        levels.

Mon 27 Jun 2011 09:51:57 PM PDT
    - Schematics are complete. Committing.

Wed 29 Jun 2011 11:18:40 PM PDT
    - Running gnetlist -g drc2 against all of the schematics at once
      generates a bunch of duplicate refdes errors, but I thought the
      reference designators were necessary to make the connection
      between levels... Maybe drc2 should not be run against a
      hierarchical design, but only against multiple page designs, or
      one page at a time for hierarchical.

    - I did not correct the warnings about missing pintype attribute for
      the I/O devices in the subckrt schematics.

    - I'm ignoring the error with respect to open-collectors. There is a
      patch pending that would eliminate the error.


Sat 02 Jul 2011 08:34:37 AM PDT
    - Installed gspiceui to check it out

Sun 03 Jul 2011 09:26:46 PM PDT
    - Found that gspiceui is part of the problem.
      When the + input to the LM393 was a named net, gspiceui would drop
      it LM393 from the simulation list created by gspiceui.

      The netlist created by gnetlist doesn't have the problem.

    - spice_capMeter.sch can now be simulate by ngspice. I had to add a
      pullup resistor to the output of the frequency buffer and and a
      10uf capacitor to the input in order to slow down the oscillator
      frequency. Otherwise I got error messages about the time interval
      being two small.

Sun 03 Jul 2011 11:11:52 PM PDT
    - The spice simulations are showing a little oscillation on the +5v
      levels of the osc output and even larger oscillations on the
      output of the frequency buffer. Adding 10pf to the output of each
      module seems to help. Adding 100pf causes a bit of rounding to the
      top of the rising edge.

    TODO:
      - Move R222 to the outside of freq_buf - DONE
      - R223, needs a different number (R7) - DONE, R7
      - The simulation fails if R223 is 10K but works if it is 100k.
        This sets the historesis, so check the buffer stand-alone to see
        how big the input signal needs to be.
      - I think the highest frequency occurs when there is no capacitor
        and no inductor. Verify this. Yes. DONE
      - Determine the highest frequency that can be passed by the
        freq_buf. This will set the highest input frequency.

      - Clean-up schematics- DONE
      - Add .TRANS directives to the spice_* schematics rather than
        relying on the external, and common, spicecmds file. - DONE
      - Create separate spice_* schematics for inductance and frequency
        measurements.
      - Clarify the Lx/Cx labels - DONE (switched them)


Mon 04 Jul 2011 10:02:58 AM PDT
    - Found that adding 10pf to the output of the freq_osc would
      eliminate the HF oscillation at the top of the output waveform.
      1pf would cause overshoot, 100pf would cause noticable rounding of
      the corners of the waveform.

Mon 04 Jul 2011 12:42:18 PM PDT
    - Web search provided more information on the "doAnalyses: TRAN:
      Timestep too small" error message. I found I could fix the problem
      by adding a UIC (use initial conditions) to the .TRAN directive.
      That let me put R7 back to 10k and use 50k for the pull-up (which
      is the pullup listed for I/O pins in the Atmega data sheet.


Mon 04 Jul 2011 02:21:53 PM PDT
    - With R7 at 10k and the pull-up resistor at 50k, there is roll-off on
      the rising edge.
    - Added a pull-up resistor to the freq_buf, R10. 3.3K. Also changed
      the feedback resistor, R7, to 100K, so that the high side of the
      wave form would be closer to 5v. (4.9 vs 4.5 volts).

    - The sink current for the output of the comparitor will be
      5/(1/(1/3.3k + 1/50K + 1/(100K + 10K))) = 1.67mA. This is well
      within the 20mA spec for the LM393.


Sun 17 Jul 2011 09:02:07 AM PDT
    - After spending quite a bit of time, I am unable to get a ngspice
      simulation to work with the frequence measurement configuration
      due to the clipping diodes. Without the diodes an AC analysis can
      be run and roll-off is seen well above 1MHz. I suspect that I am
      not getting the diodes biased properly at the start of the AC
      simulation. So for now I am dropping the diodes in the spice
      frequency model.

